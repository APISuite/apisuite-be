version: '3.7'
services:
  apisuite_migrations:
    image: cloudokihub/apisuite-be:${IMG_VERSION}
    build: .
    command: npm run migrate
    container_name: apisuite-migrations
    depends_on:
      - db
    environment:
      - POSTGRES_ADDRESS
      - POSTGRES_PORT_INTERNAL
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - APISUITE_CIPHER_PASSWORD
    restart: on-failure

  apisuite_api:
    image: cloudokihub/apisuite-be:${IMG_VERSION}
    build: .
    container_name: apisuite-api
    depends_on:
      - db
      - apisuite_migrations
    environment:
      - POSTGRES_ADDRESS
      - POSTGRES_PORT_INTERNAL
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - SENDGRID_API_KEY
      - APISUITE_APP_URL
      - APISUITE_FROM_EMAIL
      - APISUITE_API_PORT
      - APISUITE_SETUP_TOKEN
      - APISUITE_CIPHER_PASSWORD
      - APISUITE_TOKEN_ISSUER
      - APISUITE_ACCESS_TOKEN_TTL
      - APISUITE_ACCESS_TOKEN_SECRET
      - APISUITE_REFRESH_TOKEN_TTL
      - APISUITE_REFRESH_TOKEN_BYTES
      - APISUITE_AUTH_COOKIE_HTTPONLY
      - APISUITE_AUTH_COOKIE_DOMAIN
      - APISUITE_AUTH_COOKIE_SAME_SITE
      - APISUITE_AUTH_COOKIE_SECURE
    ports:
      - "${APISUITE_API_PORT}:6001"

  db:
    image: postgres:12
    container_name: apisuite-db
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_ADDITIONAL_DATABASES}
      - POSTGRES_SCHEMA
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USERNAME}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    ports:
      - "${POSTGRES_PORT_INTERNAL}"
    volumes:
      - ./.compose-utils/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./.compose-utils/db/data:/var/lib/postgresql/data

  apisuite_jobs:
    image: cloudokihub/apisuite-be-jobs:latest
    container_name: apisuite-jobs
    environment:
      - APISUITE_JOBS_DB=${APISUITE_JOBS_DB}
      - APISUITE_JOBS_ACTV_CRON=${APISUITE_JOBS_ACTV_CRON}
      - APISUITE_JOBS_ACTV_TTL=${APISUITE_JOBS_ACTV_TTL}
      - APISUITE_JOBS_RECOV_CRON=${APISUITE_JOBS_RECOV_CRON}
      - APISUITE_JOBS_RECOV_TTL=${APISUITE_JOBS_RECOV_TTL}

  hydra-migrate:
    container_name: apisuite-hydra-migrate
    image: oryd/hydra:v1.6-alpine
    depends_on:
      - db
    environment:
      - DSN=${DSN}
    command:
      migrate sql -e --yes
    restart: on-failure

  hydra:
    image: oryd/hydra:v1.6-alpine
    container_name: apisuite-hydra-server
    restart: unless-stopped
    depends_on:
      - hydra-migrate
      - db
    ports:
      - "4444" # Public port
      - "4445" # Admin port
      - "5555" # Port for hydra token user
    command:
      serve all --dangerous-force-http
    environment:
      - URLS_SELF_ISSUER=${HYDRA_SERVER_URLS_SELF_ISSUER:-http://apisuite-hydra-server:4444}
      - URLS_CONSENT=${HYDRA_SERVER_URLS_CONSENT:-http://127.0.0.1:3001/auth/consent}
      - URLS_LOGIN=${HYDRA_SERVER_URLS_LOGIN:-http://127.0.0.1:3001/auth/login}
      - URLS_LOGOUT=${HYDRA_SERVER_URLS_LOGOUT:-http://127.0.0.1:3001/auth/logout}
      - DSN=${DSN}
      - SECRETS_SYSTEM=${SECRETS_SYSTEM}
      - OIDC_SUBJECT_TYPES_SUPPORTED=public,pairwise
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=${SECRETS_SYSTEM}
      - CORS_ALLOWED_ORIGINS=*
      - SERVE_PUBLIC_CORS_ENABLED=true
      - LOG_LEVEL=debug
      - SERVE_PUBLIC_CORS_DEBUG=true
      - SERVE_PUBLIC_CORS_ALLOWED_ORIGINS=*
      - SERVE_ADMIN_CORS_ENABLED=true
      - SERVE_ADMIN_CORS_DEBUG=true
      - SERVE_ADMIN_CORS_ALLOWED_ORIGINS=*
      - SERVE_COOKIES_SAME_SITE_LEGACY_WORKAROUND=true

  apisuite_msg_broker:
    image: "rabbitmq:3.8.8-alpine"
    container_name: apisuite-msg-broker
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_ENABLED_PLUGINS_FILE=/etc/rabbitmq/enabled_plugins
    ports:
      - 127.0.0.1:5672:5672
      - 15672:15672
    volumes:
      - ./.compose-utils/rabbitmq/etc/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./.compose-utils/rabbitmq/data/:/var/lib/rabbitmq/

networks:
  default:
    name: apisuite-net
